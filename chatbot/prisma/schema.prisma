generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Conversation {
  id        String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  messages  Message[]
  documents Document[]
}

model Message {
  id             String       @id @default(cuid())
  content        String
  role           String       // 'user' or 'assistant'
  createdAt      DateTime     @default(now())
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  citations      Citation[]
}

model Document {
  id             String       @id @default(cuid())
  filename       String
  originalName   String
  fileType       String
  fileSize       Int
  uploadedAt     DateTime     @default(now())
  processed      Boolean      @default(false)
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  chunks         DocumentChunk[]
  citations      Citation[]
}

model DocumentChunk {
  id         String   @id @default(cuid())
  content    String
  metadata   Json?
  embeddings Float[]
  documentId String
  document   Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
}

model Citation {
  id        String   @id @default(cuid())
  content   String
  pageNumber Int?
  messageId String
  message   Message  @relation(fields: [messageId], references: [id], onDelete: Cascade)
  documentId String
  document  Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
}
